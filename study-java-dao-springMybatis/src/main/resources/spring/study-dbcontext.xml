<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${database.driverClass}"/>
		<property name="url" value="${database.jdbcUrl}"/>
		<property name="username" value="${database.user}"/>
		<property name="password" value="${database.password}"/>

		<property name="initialSize" value="${jdbc.initialpoolsize}"/>
		<property name="minIdle" value="${jdbc.minpoolsize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>

		<property name="maxWait" value="60000"/>

		<property name="timeBetweenEvictionRunsMillis" value="60000"/>

		<property name="minEvictableIdleTimeMillis" value="300000"/>

		<property name="validationQuery" value="SELECT CURRENT_DATE"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>

		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<property name="filters" value="stat"/>
	</bean>
    
    <!-- 注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="mybatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <array>
                <value>classpath*:sqlMapper/*Mapper.xml</value>
<!--                 <value>classpath:com/chirq/study/mybatis/xml/dao/*Mapper.xml</value> -->
            </array>
        </property>
        		
<!-- 		<property name="mapperLocations"> -->
<!-- 			<list> -->
<!-- 				<value>classpath:com/namibank/df/gateway/dao/*Mapper.xml</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
		<property name="typeAliasesPackage" value="com.chirq.study.mybatis.xml.entity" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
	</bean>

	

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.chirq.study.mybatis.xml.dao" />
		<property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactory" />
	</bean> 
	  	   
  	<!-- tx配置事务 start -->
<!--     <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!--        <tx:attributes> -->
<!--            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!--            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!--            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!--            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/> -->
<!--        </tx:attributes> -->
<!--    </tx:advice> -->
   <!-- 第一个*代表所有的返回值类型;第二个*代表所有的类;第三个*代表类所有方法;最后一个..代表所有的参数 -->
   <!-- <aop:config>
        <aop:pointcut id="interceptorPointCuts" expression="execution(* com.chirq.study.bybatis.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />    
   </aop:config>  -->
   <!-- tx配置事务 end -->
   
       <!-- 扫描事务注解 -->
    <context:component-scan base-package="com.chirq.study.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
</beans>
